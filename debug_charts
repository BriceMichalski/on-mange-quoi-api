---
# Source: on-mange-quoi-api/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: omq-on-mange-quoi-api
  labels:
    helm.sh/chart: on-mange-quoi-api-0.1.0
    app.kubernetes.io/name: on-mange-quoi-api
    app.kubernetes.io/instance: omq
    app.kubernetes.io/version: "0.0.1-snapshot"
    app.kubernetes.io/managed-by: Helm
---
# Source: on-mange-quoi-api/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: omq-on-mange-quoi-api
  labels:
    helm.sh/chart: on-mange-quoi-api-0.1.0
    app.kubernetes.io/name: on-mange-quoi-api
    app.kubernetes.io/instance: omq
    app.kubernetes.io/version: "0.0.1-snapshot"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: on-mange-quoi-api
    app.kubernetes.io/instance: omq
---
# Source: on-mange-quoi-api/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: omq-on-mange-quoi-api
  labels:
    helm.sh/chart: on-mange-quoi-api-0.1.0
    app.kubernetes.io/name: on-mange-quoi-api
    app.kubernetes.io/instance: omq
    app.kubernetes.io/version: "0.0.1-snapshot"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: on-mange-quoi-api
      app.kubernetes.io/instance: omq
  template:
    metadata:
      labels:
        app.kubernetes.io/name: on-mange-quoi-api
        app.kubernetes.io/instance: omq
    spec:
      serviceAccountName: omq-on-mange-quoi-api
      securityContext:
        {}
      containers:
        - name: on-mange-quoi-api
          securityContext:
            {}
          image: "ghcr.io/bricemichalski/omq:latest"
          imagePullPolicy: Always
          env:
            - name: PORT
              value: "8080"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
---
# Source: on-mange-quoi-api/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: omq-on-mange-quoi-api
  labels:
    helm.sh/chart: on-mange-quoi-api-0.1.0
    app.kubernetes.io/name: on-mange-quoi-api
    app.kubernetes.io/instance: omq
    app.kubernetes.io/version: "0.0.1-snapshot"
    app.kubernetes.io/managed-by: Helm
  annotations:
    traefik.ingress.kubernetes.io/router.middlewares: kube-operable-cloudflare-ip-whitelist@kubernetescrd
    cert-manager.io/cluster-issuer: letsencrypt
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
spec:
  ingressClassName: traefik
  tls:
    - hosts:
        - "api.on-mange-quoi.com"
      secretName: api.on-mange-quoi.com
  rules:
    - host: "api.on-mange-quoi.com"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: omq-on-mange-quoi-api
                port:
                  number: 8080
---
# Source: on-mange-quoi-api/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "omq-on-mange-quoi-api-test-connection"
  labels:
    helm.sh/chart: on-mange-quoi-api-0.1.0
    app.kubernetes.io/name: on-mange-quoi-api
    app.kubernetes.io/instance: omq
    app.kubernetes.io/version: "0.0.1-snapshot"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['omq-on-mange-quoi-api:8080']
  restartPolicy: Never
